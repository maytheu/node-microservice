openapi: 3.0.0
info:
  title: Order service API
  description: Order service API collection.
  version: 1.0.0

servers:
  - url: http://localhost:3001/api/v1/order
    description: Local Server endpoint for order service
  - url: https://.../api/v1/order
    description: Server endpoint for order service

paths:
  /:
    get:
      security:
        - bearerAuth: []
      summary: Orders
      description: View all user orders
      tags: ['order']
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorize'
        '500':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServer'

  /single/{orderId}:
    get:
      summary: view order details
      description: View order by id
      tags: ['order']
      parameters:
        - name: orderId
          in: path
          required: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorize'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServer'

  /{productId}:
    post:
      summary: Add product
      description: Add selected product id to cart
      tags: ['order']
      parameters:
        - name: productId
          in: path
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
                  example: 2
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                      quantity:
                        type: number
                        example: 2
                      paymemntInitialized:
                        type: boolean
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validation'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServer'

  /update/{orderId}:
    put:
      security:
        - bearerAuth: []
      summary: Update cart
      description: Change cart quanty based on cart id
      tags: ['order']
      parameters:
        - name: orderId
          in: path
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
                  example: 2
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorize'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validation'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServer'

# Reusable components
components:
  schemas:
    Order:
      type: object
      properties:
        price:
          type: number
          example: 1000
        cartId:
          type: string
        quantity:
          type: number
          example: 5
        image:
          type: string
        product:
          type: string
          example: product name
        description:
          type: string
        productInStock:
          type: number

    Validation:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 422
            status:
              type: string
              example: fail
            error:
              type: object
              properties:
                message:
                  type: string
                  example: Validation error message

        message:
          type: string
          example: Request validation failed

    Duplicate:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 409
            status:
              type: string
              example: fail
            error:
              type: object
        message:
          type: string

    NotFound:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 404
            status:
              type: string
              example: fail
            error:
              type: object
        message:
          type: string

    Unauthorize:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 401
            status:
              type: string
              example: fail
            error:
              type: object
              properties:
                message:
                  type: string
        message:
          type: string
          example: Unauthorized user

    InternalServer:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 500
            status:
              type: string
              example: fail
            error:
              type: object
              properties:
                message:
                  type: string
        message:
          type: string
          example: Internal server error

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
