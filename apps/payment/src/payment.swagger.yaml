openapi: 3.0.0
info:
  title: Payment service API
  description: Payment service API collection.
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/v1/payment
    description: Local Server endpoint for payment service
  - url: https://payment-service-8scu.onrender.com/api/v1/payment
    description: Server endpoint for payment service

paths:
  /:
    post:
      summary: Initialize Payment
      description: Connect with paystack to make payment, accept the same parameters as verif API
      tags: ['payment']
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cart:
                  type: string
                  example: cartId1,  cartId2
      responses:
        '200':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      url:
                        type: string
                        example: paystack url to make payment
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorize'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validation'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServer'

  /verify:
    post:
      summary: Payment details
      description: View total amount to be made, it accepts cartId, for multiple carts, pass cartid as string seperated by comma
      tags: ['payment']
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cart:
                  type: string
                  example: cartId1,  cartId2
      responses:
        '200':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      totalAmount:
                        type: number
                        example: 1000
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorize'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validation'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServer'

  /webhook:
    post:
      summary: paystack webhook
      description: Can only be access by paystack
      tags: ['payment']

# Reusable components
components:
  schemas:
    Validation:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 422
            status:
              type: string
              example: fail
            error:
              type: object
              properties:
                message:
                  type: string
                  example: Validation error message

        message:
          type: string
          example: Request validation failed

    Duplicate:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 409
            status:
              type: string
              example: fail
            error:
              type: object
        message:
          type: string

    NotFound:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 404
            status:
              type: string
              example: fail
            error:
              type: object
        message:
          type: string

    Unauthorize:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 401
            status:
              type: string
              example: fail
            error:
              type: object
              properties:
                message:
                  type: string
        message:
          type: string
          example: Unauthorized user

    InternalServer:
      type: object
      properties:
        status:
          type: string
          example: fail
        error:
          type: object
          properties:
            statusCode:
              type: number
              example: 500
            status:
              type: string
              example: fail
            error:
              type: object
              properties:
                message:
                  type: string
        message:
          type: string
          example: Internal server error

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
